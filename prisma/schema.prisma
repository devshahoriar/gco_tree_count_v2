generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  emailVerified Boolean
  image         String?
  role          String
  permissions   String?
  createdAt     DateTime
  updatedAt     DateTime
  Session       Session[]
  Account       Account[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Division {
  id    Int     @id @default(autoincrement())
  name  String
  Zilla Zilla[]
}

model Zilla {
  id         Int        @id @default(autoincrement())
  name       String
  divisionId Int
  division   Division   @relation(fields: [divisionId], references: [id], onDelete: Cascade)
  Upazilla   Upazilla[]
}

model Upazilla {
  id         Int          @id @default(autoincrement())
  name       String
  zillaId    Int
  zilla      Zilla        @relation(fields: [zillaId], references: [id], onDelete: Cascade)
  Union      Union[]
  PostOffice PostOffice[]
}

model Union {
  id         Int      @id @default(autoincrement())
  name       String
  upazillaId Int
  upazilla   Upazilla @relation(fields: [upazillaId], references: [id], onDelete: Cascade)
}

model PostOffice {
  id        Int      @id @default(autoincrement())
  name      String
  postCode  String
  upZillaId Int
  upZilla   Upazilla @relation(fields: [upZillaId], references: [id], onDelete: Cascade)
}
